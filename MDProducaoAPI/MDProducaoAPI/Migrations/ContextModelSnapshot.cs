// <auto-generated />
using System;
using MDProducaoAPI.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MDProducaoAPI.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MDProducaoAPI.Models.ManufacturingPlan", b =>
                {
                    b.Property<long>("manufacturingPlanId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("manufacturingPlanId");

                    b.ToTable("ManufacturingPlans");
                });

            modelBuilder.Entity("MDProducaoAPI.Models.Operation", b =>
                {
                    b.Property<long>("OperationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OperationTime");

                    b.Property<double>("PreparationTime");

                    b.Property<long?>("manufacturingPlanId");

                    b.HasKey("OperationId");

                    b.HasIndex("manufacturingPlanId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("MDProducaoAPI.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ManPlanId");

                    b.HasKey("ProductId");

                    b.HasIndex("ManPlanId")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MDProducaoAPI.Models.ManufacturingPlan", b =>
                {
                    b.OwnsOne("MDProducaoAPI.Models.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<long>("manufacturingPlanId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("name")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("PlanName")
                                .HasMaxLength(300)
                                .HasDefaultValue("");

                            b1.HasKey("manufacturingPlanId");

                            b1.ToTable("ManufacturingPlans");

                            b1.HasOne("MDProducaoAPI.Models.ManufacturingPlan")
                                .WithOne("Name")
                                .HasForeignKey("MDProducaoAPI.Models.ValueObjects.Name", "manufacturingPlanId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("MDProducaoAPI.Models.Operation", b =>
                {
                    b.HasOne("MDProducaoAPI.Models.ManufacturingPlan", "ManufacturingPlan")
                        .WithMany("OperationsList")
                        .HasForeignKey("manufacturingPlanId");

                    b.OwnsOne("MDProducaoAPI.Models.ToolName", "ToolName", b1 =>
                        {
                            b1.Property<long>("OperationId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("toolName")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("ToolName")
                                .HasMaxLength(300)
                                .HasDefaultValue("");

                            b1.HasKey("OperationId");

                            b1.ToTable("Operations");

                            b1.HasOne("MDProducaoAPI.Models.Operation")
                                .WithOne("ToolName")
                                .HasForeignKey("MDProducaoAPI.Models.ToolName", "OperationId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("MDProducaoAPI.Models.ValueObjects.OperationTool", "OperationTool", b1 =>
                        {
                            b1.Property<long>("OperationId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("operationTool")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("OperationTool")
                                .HasMaxLength(300)
                                .HasDefaultValue("");

                            b1.HasKey("OperationId");

                            b1.ToTable("Operations");

                            b1.HasOne("MDProducaoAPI.Models.Operation")
                                .WithOne("OperationTool")
                                .HasForeignKey("MDProducaoAPI.Models.ValueObjects.OperationTool", "OperationId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("MDProducaoAPI.Models.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<long>("OperationId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("name")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("OperationName")
                                .HasMaxLength(300)
                                .HasDefaultValue("");

                            b1.HasKey("OperationId");

                            b1.ToTable("Operations");

                            b1.HasOne("MDProducaoAPI.Models.Operation")
                                .WithOne("Name")
                                .HasForeignKey("MDProducaoAPI.Models.ValueObjects.Name", "OperationId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("MDProducaoAPI.Models.Product", b =>
                {
                    b.HasOne("MDProducaoAPI.Models.ManufacturingPlan", "ManPlan")
                        .WithOne("Product")
                        .HasForeignKey("MDProducaoAPI.Models.Product", "ManPlanId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("MDProducaoAPI.Models.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<long>("ProductId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("name")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("ProductName")
                                .HasMaxLength(300)
                                .HasDefaultValue("");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.HasOne("MDProducaoAPI.Models.Product")
                                .WithOne("Name")
                                .HasForeignKey("MDProducaoAPI.Models.ValueObjects.Name", "ProductId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
